/*
 * adt.js - Algebraic Data Types for JavaScript
 * adt.js is free, public domain software (http://creativecommons.org/publicdomain/zero/1.0/)
 * Originally created by Rehno Lindeque of http://www.mischievousmeerkat.com
 */
var adt = (function() {
"use strict";
var isADT=function(e){return Array.isArray(e)&&typeof e._tag=="string"},isInterface=function(e){return typeof e=="function"&&typeof e._eval=="function"},init=function(e,t){var n,r,i;for(n=0;n<t.length;++n){var s=t[n];if(Array.isArray(s))init(e,s);else if(typeof s=="string"||typeof s=="number"){if(s!=="_"&&String(s).charAt(0)==="_")continue;e[s]=function(e){return function(){return construct(e,arguments)}}(s)}else{if(typeof s!="object"&&typeof s!="function")continue;for(r in s){if(r!=="_"&&r.charAt(0)==="_")continue;typeof s[r]=="function"?e[r]=s[r]:e[r]=function(e){return function(){return e}}(s[r])}}}},adt=function(){var e={};return init(e,arguments),evaluators(e)},getObjectType=function(e){var t=Object.prototype.toString.call(e);return t.slice(t.indexOf(" ")+1,t.length-1)},getDataType=function(e){return isADT(e)?"ADT":getObjectType(e)},getTypeTag=function(e){return isADT(e)?e._tag:getObjectType(e)};adt.isADT=isADT,adt.isInterface=isInterface,adt.version="1.0.0";var construct=function(e,t){var n=[].slice.call(t,0);return n._tag=e,n},evaluators=function(e){var t,n=function(){return n._eval.apply(n,arguments)},r=function(e,t,r,i){var s;n._pattern=e!=null?e:t!=null?t:r,n._tag=t!=null?t:r,n._datatype=r!=null?r:"ADT";var o=n[n._pattern];return typeof o!="function"&&(o=n._),o.apply(n,i)};n._eval=function(e){return isADT(e)?r(null,e._tag,"ADT",e):r(null,null,getObjectType(e),[e])};for(t in e)switch(t){case"eval":continue;default:t!=="eval"&&(typeof e[t]=="function"?n[t]=function(t){return function(){return e[t].apply(n,arguments)}}(t):n[t]=function(t){return function(){return e[t]}}(t))}return typeof e["_"]=="undefined"&&(e._=function(){return this._datatype!=="ADT"?arguments[0]:construct(this._tag,arguments)},n._=function(){return e._.apply(n,arguments)}),n};  // Export adt to a CommonJS module if exports is available
  if (typeof(exports) !== "undefined" && exports !== null)
    module.exports = adt;
  return adt;
})();

