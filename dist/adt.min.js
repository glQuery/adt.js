/*
 * adt.js - Algebraic Data Types for JavaScript
 * adt.js is free, public domain software (http://creativecommons.org/publicdomain/zero/1.0/)
 * Originally created by Rehno Lindeque of http://www.mischievousmeerkat.com
 */
var adt = (function() {
"use strict";
var init=function(a,b){var c,d;for(c=0;c<b.length;++c){var e=b[c];if(Array.isArray(e))init(a,e);else if(typeof e=="string"||typeof e=="number")a[e]=makeConstructor(e);else{if(typeof e!="object")continue;for(d in e){if(typeof e[d]!="function")continue;a[d]=e[d]}}}},adt=function(){var a={};return init(a,arguments),evaluator(a)},makeConstructor=function(a){return function(){return[a].concat([].slice.call(arguments,0))}},evaluator=function(a){var b,c=function(){return c.eval.apply(d,arguments)},d=Object.create(a);c.eval=function(a){if(typeof a=="string"||typeof a=="number")return typeof c[a]=="function"?c[a].apply(d,[].slice.call(arguments,1)):c._.apply(d,arguments);if(Array.isArray(a)&&a.length>0){var b=new Array(a.length),e="",f;for(f=1;f<a.length;++f){var g=c.eval(a[f]);Array.isArray(g)&&(g.length>0&&(typeof g[0]=="string"||typeof g[0]=="number")?e=e.concat(" ".concat(g[0])):e=e.concat(" ".concat(typeof g))),b[f]=g}return b[0]=a[0],c.eval.apply(d,b)}return a};for(b in a)b!=="eval"&&(typeof a[b]=="function"?c[b]=function(b){return function(){return a[b].apply(d,arguments)}}(b):c[b]=function(b){return function(){return a[b]}}(b));return typeof a["_"]=="undefined"&&(a._=function(a){return a},c._=function(){return a._.apply(d,arguments)}),c};adt.constructors=function(a){var b,c=[];if(a!=null)for(b in a)c.push(b);return adt.apply(null,c)};  // Export adt to a CommonJS module if exports is available
  if (typeof(exports) !== "undefined" && exports !== null)
    exports.adt = adt;
  return adt;
})();

